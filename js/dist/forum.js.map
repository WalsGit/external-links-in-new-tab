{"version":3,"file":"forum.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAmC;AAEW;AACc;AACF;AACU;AACpB;AAEhDA,oEAAgB,CAACO,GAAG,CAAC,wBAAwB,EAAE,YAAM;EACjD,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;IAChCC,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC,CAACC,OAAO,CAAC,UAACC,OAAgB,EAAK;MACvE,IAAMC,IAAI,GAAGD,OAAO,CAACE,YAAY,CAAC,MAAM,CAAC;MACzC,IAAID,IAAI,EAAE;QACN,IAAME,GAAG,GAAG,IAAIC,GAAG,CAACH,IAAI,CAAC;QACzB,IAAIE,GAAG,CAACE,IAAI,KAAKC,MAAM,CAACC,QAAQ,CAACF,IAAI,EAAE;UACnCL,OAAO,CAACQ,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC;UACxCR,OAAO,CAACQ,YAAY,CAAC,KAAK,EAAE,qBAAqB,CAAC;QACtD;MACJ;IACJ,CAAC,CAAC;EACV,CAAC;;EAED;EACAnB,4DAAM,CAACE,oFAAmB,EAAE,UAAU,EAAEK,yBAAyB,CAAC;EAClEP,4DAAM,CAACG,yFAAwB,EAAE,UAAU,EAAEI,yBAAyB,CAAC;;EAEvE;EACAP,4DAAM,CAACC,qFAAoB,EAAE,UAAU,EAAE,YAAY;IACjDM,yBAAyB,CAAC,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACAA,yBAAyB,CAAC,CAAC;;EAE3B;EACAP,4DAAM,CAACI,+EAAc,EAAE,UAAU,EAAE,YAAY;IAC3CG,yBAAyB,CAAC,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACAP,4DAAM,CAACI,+EAAc,EAAE,UAAU,EAAE,YAAY;IAC3CG,yBAAyB,CAAC,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC,CAAC;;;;;;;;;;;AC3CF;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://@walsgit/external-link-in-new-tab/./src/forum/index.ts","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['common/extend']\"","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['forum/app']\"","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@walsgit/external-link-in-new-tab/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@walsgit/external-link-in-new-tab/webpack/bootstrap","webpack://@walsgit/external-link-in-new-tab/webpack/runtime/compat get default export","webpack://@walsgit/external-link-in-new-tab/webpack/runtime/define property getters","webpack://@walsgit/external-link-in-new-tab/webpack/runtime/hasOwnProperty shorthand","webpack://@walsgit/external-link-in-new-tab/webpack/runtime/make namespace object"],"sourcesContent":["import app from 'flarum/forum/app';\n\nimport { extend } from 'flarum/common/extend';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport Post from 'flarum/forum/components/Post';\n\napp.initializers.add('walsgit/external-links', () => {\n    const openExternalLinksInNewTab = () => {\n            document.querySelectorAll('a[href^=\"http\"]').forEach((element: Element) => {\n                const href = element.getAttribute('href');\n                if (href) {\n                    const url = new URL(href);\n                    if (url.host !== window.location.host) {\n                        element.setAttribute('target', '_blank');\n                        element.setAttribute('rel', 'noopener noreferrer');\n                    }\n                }\n            });\n    };\n\n    // Target nav and menu links\n    extend(IndexPage.prototype, 'oncreate', openExternalLinksInNewTab);\n    extend(DiscussionPage.prototype, 'oncreate', openExternalLinksInNewTab);\n\n    // Target post links\n    extend(PostStream.prototype, 'oncreate', function () {\n        openExternalLinksInNewTab();\n    });\n\n    // Target all other extarnal links in the page\n    openExternalLinksInNewTab();\n\n    // Listen to post creation event\n    extend(Post.prototype, 'oncreate', function () {\n        openExternalLinksInNewTab();\n    });\n\n    // Listen to post update event\n    extend(Post.prototype, 'onupdate', function () {\n        openExternalLinksInNewTab();\n    });\n});\n\n\n","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/Post'];","module.exports = flarum.core.compat['forum/components/PostStream'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["app","extend","PostStream","IndexPage","DiscussionPage","Post","initializers","add","openExternalLinksInNewTab","document","querySelectorAll","forEach","element","href","getAttribute","url","URL","host","window","location","setAttribute","prototype"],"sourceRoot":""}